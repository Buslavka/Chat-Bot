
import telebot
from telebot import types
from deep_translator import GoogleTranslator

API_TOKEN = '7715842066:AAGwQCW_HxypTsbzqxLPj5kQuMXl7YYrsiA'
bot = telebot.TeleBot(API_TOKEN)

# –•—Ä–∞–Ω–∏–º —è–∑—ã–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_language = {}

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤
LANG_OPTIONS = {
    'üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π': 'en',
    'üá©üá™ –ù–µ–º–µ—Ü–∫–∏–π': 'de',
    'üá±üáª –õ–∞—Ç—ã—à—Å–∫–∏–π': 'lv' ,
    'üá∑üá∫ –†—É—Å—Å–∫–∏–π': 'ru',
    'üá´üá∑ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π': 'fr',
    'üá™üá∏ –ò—Å–ø–∞–Ω—Å–∫–∏–π': 'es',
    'üáÆüáπ –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π': 'it'
}

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):

    with open('–ï–ª–µ–Ω–∞ –§–µ–¥–æ—Ä–æ–≤–∞ (1).png', 'rb') as photo:  # üîÅ –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ
        bot.send_photo(message.chat.id, photo)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
    text = "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫)\n–ú–æ—è —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –≤–∞–º –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å —è–∑—ã–∫–æ–≤—ã–µ –±–∞—Ä—å–µ—Ä—ã ‚úàÔ∏è\n"
    bot.send_message(message.chat.id, text)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    for lang in LANG_OPTIONS.keys():
        markup.add(types.KeyboardButton(lang))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda message: message.text in LANG_OPTIONS)
def choose_language(message):
    user_language[message.chat.id] = LANG_OPTIONS[message.text]
    bot.send_message(message.chat.id, f" {message.text}\n–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É‚úÖ")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–µ—Ä–µ–≤–æ–¥
@bot.message_handler(func=lambda message: True)
def translate_text(message):
    chat_id = message.chat.id
    if chat_id not in user_language:
        bot.send_message(chat_id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.")
        return

    target_lang = user_language[chat_id]
    try:
        translated = GoogleTranslator(source='auto', target=target_lang).translate(message.text)
        bot.send_message(chat_id, f"–ü–µ—Ä–µ–≤–æ–¥ ({target_lang}):\n{translated}")
    except Exception as e:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
